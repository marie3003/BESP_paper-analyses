<?xml version="1.0" standalone="yes"?>

<!-- Generated by BEAUTi v10.5.0-beta5 Prerelease #unknown                   -->
<!--       by Alexei J. Drummond, Andrew Rambaut and Marc A. Suchard         -->
<!--       Department of Computer Science, University of Auckland and        -->
<!--       Institute of Evolutionary Biology, University of Edinburgh        -->
<!--       David Geffen School of Medicine, University of California, Los Angeles-->
<!--       http://beast.community/                                           -->
<beast version="10.5.0-beta5">
	

	<!-- The list of taxa to be analysed (can also include dates/ages).          -->
	<!-- ntax=193                                                                -->
	<taxa id="taxa">{$dates}</taxa>

	<!-- The sequence alignment (each sequence refers to a taxon above).         -->
	<!-- ntax=200 nchar=450                                                      -->
	
	<alignment id="alignment" dataType="nucleotide">{$taxa}</alignment>		

	<!-- The unique patterns from 1 to end                                       -->
	<!-- npatterns=450                                                           -->
	<patterns id="patterns" from="1" strip="false">
		<alignment idref="alignment"/>
	</patterns>
	

	<!-- This is a simple constant population size coalescent model              -->
	<!-- that is used to generate an initial tree for the chain.                 -->
	<constantSize id="initialDemo" units="years">
		<populationSize>
			<parameter id="initialDemo.popSize" value="{$initialPopSize}"/>
		</populationSize>
	</constantSize>
	

	<!-- Construct a starting tree that is compatible with specified clade heights-->
	<rescaledTree id="startingTree">

		<!-- The user-specified starting tree in a newick tree format.               -->
		<newick usingDates="true">{$tree}</newick>
	</rescaledTree>
	

	<!-- Generate a tree model                                                   -->
	<treeModel id="treeModel">
		<tree idref="startingTree"/>
		<rootHeight>
			<parameter id="treeModel.rootHeight"/>
		</rootHeight>
		<nodeHeights internalNodes="true">
			<parameter id="treeModel.internalNodeHeights"/>
		</nodeHeights>
		<nodeHeights internalNodes="true" rootNode="true">
			<parameter id="treeModel.allInternalNodeHeights"/>
		</nodeHeights>
	</treeModel>

	<!-- Statistic for height of the root of the tree                            -->
	<treeHeightStatistic id="rootHeight">
		<treeModel idref="treeModel"/>
	</treeHeightStatistic>

	<!-- Statistic for sum of the branch lengths of the tree (tree length)       -->
	<treeLengthStatistic id="treeLength">
		<treeModel idref="treeModel"/>
	</treeLengthStatistic>

	<!-- Statistic for time of most recent common ancestor of tree               -->
	<tmrcaStatistic id="age(root)" absolute="true">
		<treeModel idref="treeModel"/>
	</tmrcaStatistic>
	
	

	<!-- Generate a gmrfSkyGridLikelihood for the Bayesian SkyGrid process       -->
	<gmrfSkyGridLikelihood id="skygrid">
		<populationSizes>

			<!-- skygrid.logPopSize is in log units unlike other popSize                 -->
			<parameter id="skygrid.logPopSize" dimension="50" value="{$logPopSize}"/>
		</populationSizes>
		<precisionParameter>
			<parameter id="skygrid.precision" value="{$skygridPrecision}" lower="0.0"/>
		</precisionParameter>
		<numGridPoints>
			<parameter id="skygrid.numGridPoints" value="{$numGridPoints}"/>
		</numGridPoints>
		<cutOff>
			<parameter id="skygrid.cutOff" value="{$skygridCutOff}"/>
		</cutOff>
		<populationTree>
			<treeModel idref="treeModel"/>
		</populationTree>
	</gmrfSkyGridLikelihood>
	<gammaPrior id="skygrid.precision.prior" shape="{$skygridPrecisionPriorShape}" scale="{$skygridPrecisionPriorScale}" offset="0.0">
		<parameter idref="skygrid.precision"/>
	</gammaPrior>

	<!-- The strict clock (Uniform rates across branches)                        -->
	<strictClockBranchRates id="branchRates">
		<rate>
			<parameter id="clock.rate" value="{$clockRate}" lower="0.0"/>
		</rate>
	</strictClockBranchRates>
	
	<rateStatistic id="meanRate" name="meanRate" mode="mean" internal="true" external="true">
		<treeModel idref="treeModel"/>
		<strictClockBranchRates idref="branchRates"/>
	</rateStatistic>
	

	<!-- The JC substitution model (Jukes & Cantor, 1969)                        -->
	<HKYModel id="jc">
		<frequencies>
			<frequencyModel dataType="nucleotide">
				<frequencies>
					<parameter id="frequencies" value="0.25 0.25 0.25 0.25"/>
				</frequencies>
			</frequencyModel>
		</frequencies>
		<kappa>
			<parameter value="1.0"/>
		</kappa>
	</HKYModel>

	<!-- site model                                                              -->
	<siteModel id="siteModel">
		<substitutionModel>
			<HKYModel idref="jc"/>
		</substitutionModel>
	</siteModel>

	<!--                                                                         -->
	<statistic id="mu" name="mu">
		<siteModel idref="siteModel"/>
	</statistic>
	

	<!-- Likelihood for tree given sequence data                                 -->
	<treeDataLikelihood id="treeLikelihood" useAmbiguities="false" usePreOrder="false">
		<partition>
			<patterns idref="patterns"/>
			<siteModel idref="siteModel"/>
		</partition>
		<treeModel idref="treeModel"/>
		<strictClockBranchRates idref="branchRates"/>
	</treeDataLikelihood>
	

	<!-- Define operators                                                        -->
	<operators id="operators" optimizationSchedule="log">
		<scaleOperator scaleFactor="0.75" weight="3">
			<parameter idref="treeModel.rootHeight"/>
		</scaleOperator>
		<uniformOperator weight="30">
			<parameter idref="treeModel.internalNodeHeights"/>
		</uniformOperator>
		<gmrfGridBlockUpdateOperator weight="2">
			<gmrfSkyrideLikelihood idref="skygrid"/>
		</gmrfGridBlockUpdateOperator>
		<scaleOperator scaleFactor="0.75" weight="1">
			<parameter idref="skygrid.precision"/>
		</scaleOperator>
	</operators>
	

	<!-- Define MCMC                                                             -->
	<mcmc id="mcmc" chainLength="{$chainlength}" autoOptimize="true">
		<joint id="joint">
			<prior id="prior">
				<ctmcScalePrior>
					<ctmcScale>
						<parameter idref="clock.rate"/>
					</ctmcScale>
					<treeModel idref="treeModel"/>
				</ctmcScalePrior>
				<gammaPrior idref="skygrid.precision.prior"/>
				
				<gmrfSkyGridLikelihood idref="skygrid"/>
				
				<strictClockBranchRates idref="branchRates"/>
			</prior>
			<likelihood id="likelihood">
				<treeDataLikelihood idref="treeLikelihood"/>
			</likelihood>
		</joint>
		<operators idref="operators"/>

		<!-- write log to screen                                                     -->
		<log id="screenLog" logEvery="{$screenlog}">
			<column label="Joint" dp="4" width="12">
				<joint idref="joint"/>
			</column>
			<column label="Prior" dp="4" width="12">
				<prior idref="prior"/>
			</column>
			<column label="Likelihood" dp="4" width="12">
				<likelihood idref="likelihood"/>
			</column>
			<column label="age(root)" sf="6" width="12">
				<tmrcaStatistic idref="age(root)"/>
			</column>
			<column label="clock.rate" sf="6" width="12">
				<parameter idref="clock.rate"/>
			</column>
		</log>

		<!-- write log to file                                                       -->
		<log id="fileLog" logEvery="{$filelog}" fileName="uniform_0.log" overwrite="false">
			<joint idref="joint"/>
			<prior idref="prior"/>
			<likelihood idref="likelihood"/>
			<treeHeightStatistic idref="rootHeight"/>
			<tmrcaStatistic idref="age(root)"/>
			<treeLengthStatistic idref="treeLength"/>
			<parameter idref="skygrid.precision"/>
			<parameter idref="skygrid.logPopSize"/>
			<parameter idref="skygrid.cutOff"/>
			<parameter idref="clock.rate"/>
			<rateStatistic idref="meanRate"/>
			<treeDataLikelihood idref="treeLikelihood"/>
			<strictClockBranchRates idref="branchRates"/>
			<gmrfSkyGridLikelihood idref="skygrid"/>
		</log>

		<!-- write tree log to file                                                  -->
		<logTree id="treeFileLog" logEvery="{$treelog}" nexusFormat="true" fileName="uniform_0.trees" sortTranslationTable="true">
			<treeModel idref="treeModel"/>
			<trait name="rate" tag="rate">
				<strictClockBranchRates idref="branchRates"/>
			</trait>
			<joint idref="joint"/>
		</logTree>

		<!-- write state of Markov chain to checkpoint file                          -->
		<logCheckpoint id="checkpointFileLog" checkpointEvery="{$checkpointlog}" checkpointFinal="10000000" fileName="uniform_0.chkpt" overwrite="false"/>
	</mcmc>
	
	<report>
		<property name="timer">
			<mcmc idref="mcmc"/>
		</property>
	</report>
	
</beast>
